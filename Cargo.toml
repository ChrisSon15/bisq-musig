[workspace]
resolver = "3"
members = ["protocol", "rpc", "wallet"]
# Old experimental code, to be removed from project:
exclude = ["adaptor", "bdktest", "poc"]

[workspace.dependencies]
anyhow = "1.0.100"
const_format = "0.2.34"
bdk_bitcoind_rpc = "0.22.0"
bdk_electrum = { version = "0.23.2", default-features = false, features = ["use-rustls-ring"] }
bdk_wallet = { version = "2.1.0", features = ["rusqlite", "keys-bip39"] }
musig2 = { version = "0.3.1", features = ["rand"] }
rand = "0.9.2"
rand_chacha = "0.9.0"
secp = "0.6.0"
thiserror = "2.0.16"

[workspace.lints.rust]
rust-2024-compatibility = "warn"
# Most of the time, changing drop order is harmless ('rust-2024-compatibility' lint):
tail_expr_drop_order = { level = "allow", priority = 1 }

[workspace.lints.clippy]
pedantic = "warn"
# Enable selected 'nursery' and 'restriction' lints...
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
branches_sharing_code = "warn"
exhaustive_enums = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
missing_const_for_fn = "warn"
renamed_function_params = "warn"
significant_drop_tightening = "warn"
str_to_string = "warn"
try_err = "warn"
unused_trait_names = "warn"
use_self = "warn"
# Probably counterproductive to document errors of all publicly visible fns before the code has matured:
missing_errors_doc = { level = "allow", priority = 1 }
# Panics shall generally only result from bugs in callee code, so this gives too many false positives:
missing_panics_doc = { level = "allow", priority = 1 }
# Probably shouldn't annotate every (public) pure fn with '#[must_use]', so too many false positives:
must_use_candidate = { level = "allow", priority = 1 }
